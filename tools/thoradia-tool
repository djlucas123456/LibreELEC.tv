#!/bin/bash

set -e

build_addon() {
  tools/thoradia-build "$ADDON"
}

build_project() {
  if [ -z "$DEVICE" ]; then
    export WHERE="$PROJECT"
  else
    export WHERE="$DEVICE"
  fi

  echo "Building $WHERE $ARCH"

  if [ -z "$ADDONS" ]; then
    ADDONS="$(find packages/thoradia/addons -maxdepth 1 -mindepth 1 -type d -exec  basename {} \;)"
  fi
  for ADDON in $ADDONS; do
    build_addon
  done

  # build_repository

  CLONES=''
  if [ "$ARCH" == 'aarch64' ]; then
    if [ "$PROJECT" == 'Odroid_C2' ]; then
      CLONES='WeTek_Hub WeTek_Play_2'
    fi
  elif [ "$ARCH" == 'arm' ]; then
    if [ "$PROJECT" == 'RPi2' ]; then
      CLONES='Odroid_C2 S905 S912'
    elif [ "$PROJECT" == 'RPi2' ]; then
      CLONES='WeTek_Core WeTek_Hub WeTek_Play_2'
    fi
  elif [ "$PROJECT" == 'Generic' ]; then
    CLONES='Virtual'
  fi
}

build_projects() {
  echo "Building projects"

  # verbose ;)

  if [ -n "$PROJECT" ]; then
    build_project
  else
    ARCH='arm'     DEVICE='RPi2' PROJECT='RPi'        build_project
    ARCH='x86_64'                PROJECT='Generic'    build_project
    ARCH='arm'     DEVICE='RPi'  PROJECT='RPi'        build_project
#    ARCH='aarch64'               PROJECT='Odroid_C2'  build_project
#    ARCH='arm'     DEVICE='RPi'  PROJECT='RPi'        build_project
#    ARCH='arm'                   PROJECT='WeTek_Play' build_project
#    ARCH='arm'                   PROJECT='imx6'       build_project
  fi
}

build_repositories() {
. config/options

  echo $TARGET_IMG $ADDONS $ADDON_VERSION
  for REPO in $(ls -1d $TARGET_IMG/$ADDONS/$ADDON_VERSION/*/*); do
    if [ ! -f "$REPO/addons.xml" ]; then
      touch "$REPO/addons.xml"
    fi
  done

  echo "[*] cleanup addons ..."
  olddir=""
  find $TARGET_IMG/$ADDONS/$ADDON_VERSION -iname 'changelog*.txt' | sort -rV | while read line ; do
    dir=$(dirname $line)
    if [ "$olddir" = "$dir" ] ; then
      rm -f $line
    fi
    olddir=$dir
  done

  olddir=""
  find $TARGET_IMG/$ADDONS/$ADDON_VERSION -iname '*.zip' | sort -rV | while read line ; do
    dir=$(dirname $line)
    if [ "$olddir" = "$dir" ] ; then
      rm -f $line
      rm -f $line.md5
    fi
    olddir=$dir
  done

  echo "[*] updating addons.xml* ..."
  rm -rf .addons
  pwd=`pwd`
  find $TARGET_IMG/$ADDONS/$ADDON_VERSION -iname addons.xml | while read line ; do
    localdir=`echo $line | sed s/addons.xml//g`
    echo " [*] updating $line..."
    echo '<?xml version="1.0" encoding="UTF-8"?>
<addons>
' > $line.tmp
    for zip in $localdir/*/*.zip ; do
      mkdir -p ".addons/$localdir"
      unzip $zip "*/addon.xml" -d ".addons/$localdir" &>/dev/null
    done
    find .addons/$localdir -iname addon.xml | grep -v resources/ | while read xml ; do
      cat $xml | grep -v "<?" >> $line.tmp
    done
    echo '
</addons>' >> $line.tmp
    mv $line.tmp $line
    cd $localdir

    md5sum addons.xml > addons.xml.md5
    cd $pwd
  done
  rm -rf .addons
}

build_projects
build_repositories
