From 5c49eb436d1af8133969020afdcf89b2a4dd4f0c Mon Sep 17 00:00:00 2001
From: adamg <adamg88@users.noreply.github.com>
Date: Sat, 14 Sep 2019 04:51:52 +0100
Subject: [PATCH 1/2] Revert "[VideoPlayer] Fix TS resume point, related to
 PR16314 - backport"

This reverts commit 0338e992ff63acb598b71df1a9bfb8535ee42d53.
---
 .../DVDDemuxers/DVDDemuxFFmpeg.cpp            | 31 +++----------------
 1 file changed, 4 insertions(+), 27 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
index 538bfcdc2c..bfc9f7aef8 100644
--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
@@ -32,10 +32,6 @@
 #include "utils/StringUtils.h"
 #include "utils/URIUtils.h"
 
-#ifdef TARGET_POSIX
-#include "platform/linux/XTimeUtils.h"
-#endif
-
 #ifdef HAVE_LIBBLURAY
 #include "DVDInputStreams/DVDInputStreamBluray.h"
 #endif
@@ -1170,25 +1166,6 @@ bool CDVDDemuxFFmpeg::SeekTime(double time, bool backwards, double *startpts)
 
   if (m_checkvideo)
   {
-    XbmcThreads::EndTime timer(1000);
-
-    while (!IsVideoReady())
-    {
-      DemuxPacket* pkt = Read();
-      if (pkt)
-        CDVDDemuxUtils::FreeDemuxPacket(pkt);
-      else
-        Sleep(10);
-      m_pkt.result = -1;
-      av_packet_unref(&m_pkt.pkt);
-
-      if (timer.IsTimePast())
-      {
-        CLog::Log(LOGERROR, "CDVDDemuxFFmpeg::%s - Timed out waiting for video to be ready", __FUNCTION__);
-        return false;
-      }
-    }
-
     AVStream* st = m_pFormatContext->streams[m_seekStream];
     seek_pts = av_rescale(m_startTime + time / 1000, st->time_base.den, st->time_base.num);
   }
@@ -2198,7 +2175,7 @@ bool CDVDDemuxFFmpeg::IsVideoReady()
         {
           if (!m_startTime)
           {
-            m_startTime = av_rescale(st->cur_dts, st->time_base.num, st->time_base.den) - 0.000001;
+            m_startTime = av_rescale(st->cur_dts, st->time_base.num, st->time_base.den);
             m_seekStream = i;
           }
           return true;
@@ -2216,7 +2193,7 @@ bool CDVDDemuxFFmpeg::IsVideoReady()
         st = m_pFormatContext->streams[idx];
         if (st->codecpar->codec_type == AVMEDIA_TYPE_AUDIO)
         {
-          m_startTime = av_rescale(st->cur_dts, st->time_base.num, st->time_base.den) - 0.000001;
+          m_startTime = static_cast<double>(av_rescale(st->cur_dts, st->time_base.num, st->time_base.den));
           m_seekStream = i;
           break;
         }
@@ -2234,7 +2211,7 @@ bool CDVDDemuxFFmpeg::IsVideoReady()
         {
           if (!m_startTime)
           {
-            m_startTime = av_rescale(st->cur_dts, st->time_base.num, st->time_base.den) - 0.000001;
+            m_startTime = av_rescale(st->cur_dts, st->time_base.num, st->time_base.den);
             m_seekStream = i;
           }
           return true;
@@ -2251,7 +2228,7 @@ bool CDVDDemuxFFmpeg::IsVideoReady()
         st = m_pFormatContext->streams[i];
         if (st->codecpar->codec_type == AVMEDIA_TYPE_AUDIO)
         {
-          m_startTime = av_rescale(st->cur_dts, st->time_base.num, st->time_base.den) - 0.000001;
+          m_startTime = static_cast<double>(av_rescale(st->cur_dts, st->time_base.num, st->time_base.den));
           m_seekStream = i;
           break;
         }
-- 
2.17.1


From 158f365c7091c5f9624040937fcedd5fecca1758 Mon Sep 17 00:00:00 2001
From: adamg <adamg88@users.noreply.github.com>
Date: Sat, 14 Sep 2019 04:51:57 +0100
Subject: [PATCH 2/2] Revert "[VideoPlayer] Load program from stream property
 without using streaminfo"

This reverts commit 9a6a4ec80743de6bae16e601d80db73e0b4dfaa3.
---
 .../DVDDemuxers/DVDDemuxFFmpeg.cpp            | 110 ++++--------------
 .../VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h  |   2 -
 2 files changed, 21 insertions(+), 91 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
index bfc9f7aef8..45b46cb05a 100644
--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
@@ -260,30 +260,12 @@ bool CDVDDemuxFFmpeg::Open(std::shared_ptr<CDVDInputStream> pInput, bool streami
         strFile = url.Get();
       }
     }
-    if (result < 0)
+    if (result < 0 && avformat_open_input(&m_pFormatContext, strFile.c_str(), iformat, &options) < 0 )
     {
-      m_pFormatContext->flags |= AVFMT_FLAG_PRIV_OPT;
-      if (avformat_open_input(&m_pFormatContext, strFile.c_str(), iformat, &options) < 0)
-      {
-        CLog::Log(LOGDEBUG, "Error, could not open file %s", CURL::GetRedacted(strFile).c_str());
-        Dispose();
-        av_dict_free(&options);
-        return false;
-      }
+      CLog::Log(LOGDEBUG, "Error, could not open file %s", CURL::GetRedacted(strFile).c_str());
+      Dispose();
       av_dict_free(&options);
-      avformat_close_input(&m_pFormatContext);
-      m_pFormatContext = avformat_alloc_context();
-      m_pFormatContext->interrupt_callback = int_cb;
-      m_pFormatContext->flags &= ~AVFMT_FLAG_PRIV_OPT;
-      AVDictionary* options = GetFFMpegOptionsFromInput();
-      av_dict_set_int(&options, "load_all_variants", 0, AV_OPT_SEARCH_CHILDREN);
-      if (avformat_open_input(&m_pFormatContext, strFile.c_str(), iformat, &options) < 0)
-      {
-        CLog::Log(LOGDEBUG, "Error, could not open file (2) %s", CURL::GetRedacted(strFile).c_str());
-        Dispose();
-        av_dict_free(&options);
-        return false;
-      }
+      return false;
     }
     av_dict_free(&options);
   }
@@ -505,9 +487,6 @@ bool CDVDDemuxFFmpeg::Open(std::shared_ptr<CDVDInputStream> pInput, bool streami
     }
     CLog::Log(LOGDEBUG, "%s - av_find_stream_info finished", __FUNCTION__);
 
-    // print some extra information
-    av_dump_format(m_pFormatContext, 0, CURL::GetRedacted(strFile).c_str(), 0);
-
     if (m_checkvideo)
     {
       // make sure we start video with an i-frame
@@ -527,17 +506,14 @@ bool CDVDDemuxFFmpeg::Open(std::shared_ptr<CDVDInputStream> pInput, bool streami
   // if format can be nonblocking, let's use that
   m_pFormatContext->flags |= AVFMT_FLAG_NONBLOCK;
 
+  // print some extra information
+  av_dump_format(m_pFormatContext, 0, CURL::GetRedacted(strFile).c_str(), 0);
+
   // deprecated, will be always set in future versions
   m_pFormatContext->flags |= AVFMT_FLAG_KEEP_SIDE_DATA;
 
   UpdateCurrentPTS();
 
-  // select the correct program if requested
-  m_initialProgramNumber = UINT_MAX;
-  CVariant programProp(pInput->GetProperty("program"));
-  if (!programProp.isNull())
-    m_initialProgramNumber = static_cast<int>(programProp.asInteger());
-
   // in case of mpegts and we have not seen pat/pmt, defer creation of streams
   if (!skipCreateStreams || m_pFormatContext->nb_programs > 0)
   {
@@ -545,14 +521,16 @@ bool CDVDDemuxFFmpeg::Open(std::shared_ptr<CDVDInputStream> pInput, bool streami
     if (m_pFormatContext->nb_programs > 0)
     {
       // select the correct program if requested
-      if (m_initialProgramNumber != UINT_MAX)
+      CVariant programProp(pInput->GetProperty("program"));
+      if (!programProp.isNull())
       {
+        int programNumber = static_cast<int>(programProp.asInteger());
+
         for (unsigned int i = 0; i < m_pFormatContext->nb_programs; ++i)
         {
-          if (m_pFormatContext->programs[i]->program_num == static_cast<int>(m_initialProgramNumber))
+          if (m_pFormatContext->programs[i]->program_num == programNumber)
           {
             nProgram = i;
-            m_initialProgramNumber = UINT_MAX;
             break;
           }
         }
@@ -583,26 +561,14 @@ bool CDVDDemuxFFmpeg::Open(std::shared_ptr<CDVDInputStream> pInput, bool streami
     CreateStreams(nProgram);
   }
 
-  m_newProgram = m_program;
-
   // allow IsProgramChange to return true
   if (skipCreateStreams && GetNrOfStreams() == 0)
     m_program = 0;
 
+  m_newProgram = m_program;
   m_displayTime = 0;
   m_dtsAtDisplayTime = DVD_NOPTS_VALUE;
   m_startTime = 0;
-  m_seekStream = -1;
-
-  if (m_checkvideo && m_streaminfo)
-  {
-    int64_t duration = m_pFormatContext->duration;
-    std::shared_ptr<CDVDInputStream> pInputStream = m_pInput;
-    Dispose();
-    if (!Open(pInputStream, false))
-      return false;
-    m_pFormatContext->duration = duration;
-  }
 
   // seems to be a bug in ffmpeg, hls jumps back to start after a couple of seconds
   // this cures the issue
@@ -903,12 +869,12 @@ double CDVDDemuxFFmpeg::ConvertTimestamp(int64_t pts, int den, int num)
   if (!menu && m_pFormatContext->start_time != (int64_t)AV_NOPTS_VALUE)
     starttime = (double)m_pFormatContext->start_time / AV_TIME_BASE;
 
-  if (m_checkvideo)
+  if (!m_streaminfo)
     starttime = m_startTime;
 
   if (!m_bSup)
   {
-    if (timestamp > starttime || m_checkvideo)
+    if (timestamp > starttime || !m_streaminfo)
       timestamp -= starttime;
     // allow for largest possible difference in pts and dts for a single packet
     else if (timestamp + 0.5f > starttime)
@@ -980,9 +946,6 @@ DemuxPacket* CDVDDemuxFFmpeg::Read()
 
       if (IsProgramChange())
       {
-        CLog::Log(LOGNOTICE, "CDVDDemuxFFmpeg::Read() stream change");
-        av_dump_format(m_pFormatContext, 0, CURL::GetRedacted(m_pInput->GetFileName()).c_str(), 0);
-
         // update streams
         CreateStreams(m_program);
 
@@ -1164,27 +1127,21 @@ bool CDVDDemuxFFmpeg::SeekTime(double time, bool backwards, double *startpts)
   int64_t seek_pts = (int64_t)time * (AV_TIME_BASE / 1000);
   bool ismp3 = m_pFormatContext->iformat && (strcmp(m_pFormatContext->iformat->name, "mp3") == 0);
 
-  if (m_checkvideo)
-  {
-    AVStream* st = m_pFormatContext->streams[m_seekStream];
-    seek_pts = av_rescale(m_startTime + time / 1000, st->time_base.den, st->time_base.num);
-  }
+  if (!m_streaminfo)
+    seek_pts += m_startTime * AV_TIME_BASE;
   else if (m_pFormatContext->start_time != (int64_t)AV_NOPTS_VALUE && !ismp3 && !m_bSup)
     seek_pts += m_pFormatContext->start_time;
 
   int ret;
   {
     CSingleLock lock(m_critSection);
-    ret = av_seek_frame(m_pFormatContext, m_seekStream, seek_pts, backwards ? AVSEEK_FLAG_BACKWARD : 0);
+    ret = av_seek_frame(m_pFormatContext, -1, seek_pts, backwards ? AVSEEK_FLAG_BACKWARD : 0);
 
     if (ret < 0)
     {
       int64_t starttime = m_pFormatContext->start_time;
-      if (m_checkvideo)
-      {
-        AVStream* st = m_pFormatContext->streams[m_seekStream];
-        starttime = av_rescale(m_startTime, st->time_base.num, st->time_base.den);
-      }
+      if (!m_streaminfo)
+        starttime = m_startTime * AV_TIME_BASE;
 
       // demuxer can return failure, if seeking behind eof
       if (m_pFormatContext->duration &&
@@ -1403,8 +1360,6 @@ void CDVDDemuxFFmpeg::CreateStreams(unsigned int program)
     }
     if (m_program != UINT_MAX)
     {
-      m_pFormatContext->programs[m_program]->discard = AVDISCARD_NONE;
-
       // add streams from selected program
       for (unsigned int i = 0; i < m_pFormatContext->programs[m_program]->nb_stream_indexes; i++)
       {
@@ -1940,21 +1895,6 @@ bool CDVDDemuxFFmpeg::IsProgramChange()
   if (m_program == 0 && !m_pFormatContext->nb_programs)
     return false;
 
-  if (m_initialProgramNumber != UINT_MAX)
-  {
-    for (unsigned int i = 0; i < m_pFormatContext->nb_programs; ++i)
-    {
-      if (m_pFormatContext->programs[i]->program_num == static_cast<int>(m_initialProgramNumber))
-      {
-        m_newProgram = i;
-        m_initialProgramNumber = UINT_MAX;
-        break;
-      }
-    }
-    if (m_initialProgramNumber != UINT_MAX)
-      return false;
-  }
-
   if (m_program != m_newProgram)
   {
     m_program = m_newProgram;
@@ -2014,7 +1954,7 @@ unsigned int CDVDDemuxFFmpeg::HLSSelectProgram()
       }
     }
 
-    if ((strRes && strRes < selectedRes) && selectedBitrate < bandwidth)
+    if (strRes < selectedRes && selectedBitrate < bandwidth)
       continue;
 
     bool want = false;
@@ -2174,10 +2114,7 @@ bool CDVDDemuxFFmpeg::IsVideoReady()
         if (st->codecpar->extradata)
         {
           if (!m_startTime)
-          {
             m_startTime = av_rescale(st->cur_dts, st->time_base.num, st->time_base.den);
-            m_seekStream = i;
-          }
           return true;
         }
         hasVideo = true;
@@ -2194,7 +2131,6 @@ bool CDVDDemuxFFmpeg::IsVideoReady()
         if (st->codecpar->codec_type == AVMEDIA_TYPE_AUDIO)
         {
           m_startTime = static_cast<double>(av_rescale(st->cur_dts, st->time_base.num, st->time_base.den));
-          m_seekStream = i;
           break;
         }
       }
@@ -2210,10 +2146,7 @@ bool CDVDDemuxFFmpeg::IsVideoReady()
         if (st->codecpar->extradata)
         {
           if (!m_startTime)
-          {
             m_startTime = av_rescale(st->cur_dts, st->time_base.num, st->time_base.den);
-            m_seekStream = i;
-          }
           return true;
         }
         hasVideo = true;
@@ -2229,7 +2162,6 @@ bool CDVDDemuxFFmpeg::IsVideoReady()
         if (st->codecpar->codec_type == AVMEDIA_TYPE_AUDIO)
         {
           m_startTime = static_cast<double>(av_rescale(st->cur_dts, st->time_base.num, st->time_base.den));
-          m_seekStream = i;
           break;
         }
       }
diff --git a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h
index 3d280ac361..f7374b438f 100644
--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.h
@@ -145,8 +145,6 @@ protected:
   unsigned int m_program;
   unsigned int m_streamsInProgram;
   unsigned int m_newProgram;
-  unsigned int m_initialProgramNumber;
-  int m_seekStream;
 
   XbmcThreads::EndTime  m_timeout;
 
-- 
2.17.1

